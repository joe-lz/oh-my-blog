{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport AV from 'leancloud-storage';\nimport dayjs from 'dayjs';\nimport { useRouter } from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport { Tree, Button, notification, Input, Modal, TreeSelect, Menu, Dropdown, Spin } from 'antd';\nimport styles from './index.module.scss';\nimport Comments from 'src/components/www/Comments';\nimport UserInfo from 'src/components/www/UserInfo';\nimport { updatePost } from 'src/service/post';\n\nrequire('dayjs/locale/zh-cn');\n\ndayjs.locale('zh-cn');\n\nvar relativeTime = require('dayjs/plugin/relativeTime');\n\ndayjs.extend(relativeTime);\nvar TextArea = Input.TextArea;\n\nfunction Components(props) {\n  var _useState = useState(false),\n      hasLiked = _useState[0],\n      sethasLiked = _useState[1];\n\n  var _useState2 = useState(0),\n      likes = _useState2[0],\n      setlikes = _useState2[1];\n\n  var _useState3 = useState(false),\n      showComment = _useState3[0],\n      setshowComment = _useState3[1];\n\n  useEffect(function () {\n    if (props.item && props.userinfo) {\n      var _itemNew = JSON.parse(JSON.stringify(props.item));\n\n      var likesUser = _itemNew.likesUser || [];\n      sethasLiked(likesUser.includes(props.userinfo.shortid));\n      setlikes(_itemNew.likes || 0);\n    }\n  }, [props.item, props.userinfo]);\n  var itemNew = JSON.parse(JSON.stringify(props.item));\n  return __jsx(\"div\", {\n    className: styles.block\n  }, __jsx(\"div\", {\n    className: styles.postItem\n  }, __jsx(UserInfo, {\n    userinfo: props.item.attributes.userinfo,\n    time: dayjs(props.item.createdAt).format('YYYY/MM/DD'),\n    followeeList: props.followeeList\n  }), __jsx(\"div\", {\n    className: styles.postItem_middle\n  }, __jsx(\"p\", {\n    className: styles.desc\n  }, itemNew.desc), itemNew.imgUrl && __jsx(\"div\", {\n    className: styles.imgUrl,\n    style: {\n      backgroundImage: \"url(\".concat(itemNew.imgUrl, \")\")\n    }\n  }), itemNew.topic && __jsx(Link, {\n    href: \"/www/posts?topic=\".concat(itemNew.topic.objectId)\n  }, __jsx(\"div\", {\n    className: styles.topic\n  }, itemNew.topic.title))), __jsx(\"div\", {\n    className: styles.postItem_operation\n  }, __jsx(\"div\", {\n    className: hasLiked ? styles.postItem_operation_btn_active : styles.postItem_operation_btn,\n    onClick: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(updatePost({\n                postItem: props.item,\n                params: {\n                  likes: hasLiked ? -1 : 1,\n                  likesUser_id: props.userinfo.shortid\n                }\n              }));\n\n            case 2:\n              setlikes(likes + (hasLiked ? -1 : 1));\n              sethasLiked(!hasLiked);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, \"\\u70B9\\u8D5E \", likes ? likes : ''), __jsx(\"div\", {\n    className: styles.postItem_operation_btn,\n    onClick: function onClick() {\n      setshowComment(!showComment);\n    }\n  }, \"\\u8BC4\\u8BBA \", itemNew.comments ? itemNew.comments : '')), showComment && __jsx(Comments, {\n    type: \"post\",\n    id: props.item,\n    userinfo: props.userinfo\n  })));\n}\n\nexport default Components;","map":null,"metadata":{},"sourceType":"module"}