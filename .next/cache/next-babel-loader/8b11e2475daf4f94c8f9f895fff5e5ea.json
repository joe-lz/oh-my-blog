{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport AV from \"leancloud-storage\";\nimport dayjs from \"dayjs\";\nimport { useRouter } from \"next/router\";\nimport React, { useState, useEffect } from \"react\";\nimport { message } from \"antd\";\nimport styles from \"./index.module.scss\";\nimport { updateComment } from \"src/service/comment\";\n\nrequire(\"dayjs/locale/zh-cn\");\n\ndayjs.locale(\"zh-cn\");\n\nvar relativeTime = require(\"dayjs/plugin/relativeTime\");\n\ndayjs.extend(relativeTime);\n\nfunction Components(props) {\n  var _useState = useState(false),\n      hasLiked = _useState[0],\n      sethasLiked = _useState[1];\n\n  var _useState2 = useState(0),\n      likes = _useState2[0],\n      setlikes = _useState2[1];\n\n  useEffect(function () {\n    if (props.item && props.userinfo) {\n      var itemNew = JSON.parse(JSON.stringify(props.item));\n      var likesUser = itemNew.likesUser || [];\n      sethasLiked(likesUser.includes(props.userinfo.objectId));\n      setlikes(itemNew.likes || 0);\n    }\n  }, [props.item, props.userinfo]);\n  var author = props.item.attributes.user;\n  return __jsx(\"div\", {\n    className: styles.item\n  }, __jsx(\"div\", {\n    className: styles.item_top\n  }, __jsx(\"div\", {\n    className: styles.avatar,\n    style: {\n      backgroundImage: \"url(\".concat(author.avatar, \")\")\n    }\n  }), __jsx(\"p\", {\n    className: styles.nickname\n  }, author.nickname), __jsx(\"p\", {\n    className: styles.about\n  }, author.position, author.co_name ? \"@\".concat(author.co_name) : \"\"), __jsx(\"p\", {\n    className: styles.time\n  }, dayjs(props.item.createdAt).format(\"YYYY/MM/DD HH:mm\"))), __jsx(\"p\", {\n    className: styles.content\n  }, props.item.attributes.content), __jsx(\"div\", {\n    className: styles.item_operation\n  }, __jsx(\"div\", {\n    className: hasLiked ? styles.item_operation_btn_active : styles.item_operation_btn,\n    onClick: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (AV.User.current()) {\n                _context.next = 3;\n                break;\n              }\n\n              message.error(\"请先登录\");\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(updateComment({\n                commentItem: props.item,\n                params: {\n                  likes: hasLiked ? -1 : 1,\n                  likesUser_id: props.userinfo.objectId\n                }\n              }));\n\n            case 5:\n              setlikes(likes + (hasLiked ? -1 : 1));\n              sethasLiked(!hasLiked);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, __jsx(\"i\", {\n    className: \"iconfont \".concat(hasLiked ? \"icon-tubiaozhizuo-\" : \"icon-z-like\")\n  }), \" \", likes ? likes : \"\")));\n}\n\nexport default Components;","map":null,"metadata":{},"sourceType":"module"}