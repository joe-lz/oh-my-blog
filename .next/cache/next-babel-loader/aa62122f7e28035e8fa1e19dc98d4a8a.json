{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport AV from \"leancloud-storage\";\nimport dayjs from \"dayjs\";\nimport { useRouter } from \"next/router\";\nimport React, { useState, useEffect } from \"react\";\nimport { Tree, Button, notification, Input, Modal, TreeSelect, Menu, Dropdown, Spin, message } from \"antd\";\nimport styles from \"./index.module.scss\";\nimport { createComment, updateComment, getCommentList } from \"src/service/comment\";\n\nrequire(\"dayjs/locale/zh-cn\");\n\ndayjs.locale(\"zh-cn\");\n\nconst relativeTime = require(\"dayjs/plugin/relativeTime\");\n\ndayjs.extend(relativeTime);\n\nfunction Components(props) {\n  const {\n    0: hasLiked,\n    1: sethasLiked\n  } = useState(false);\n  const {\n    0: likes,\n    1: setlikes\n  } = useState(0);\n  useEffect(() => {\n    if (props.item && props.userinfo) {\n      const itemNew = JSON.parse(JSON.stringify(props.item));\n      const likesUser = itemNew.likesUser || [];\n      sethasLiked(likesUser.includes(props.userinfo.objectId));\n      setlikes(itemNew.likes || 0);\n    }\n  }, [props.item, props.userinfo]);\n  const author = props.item.attributes.user;\n  return __jsx(\"div\", {\n    className: styles.item\n  }, __jsx(\"a\", {\n    href: `/www/user/${author.objectId}`,\n    target: \"_blank\"\n  }, __jsx(\"div\", {\n    className: styles.item_top\n  }, __jsx(\"div\", {\n    className: styles.avatar,\n    style: {\n      backgroundImage: `url(${author.avatar})`\n    }\n  }), __jsx(\"p\", {\n    className: styles.nickname\n  }, author.nickname), __jsx(\"p\", {\n    className: styles.about\n  }, author.position, author.co_name ? `@${author.co_name}` : \"\"), __jsx(\"p\", {\n    className: styles.time\n  }, dayjs(props.item.createdAt).format(\"YYYY/MM/DD HH:mm\")))), __jsx(\"p\", {\n    className: styles.content\n  }, props.item.attributes.content), __jsx(\"div\", {\n    className: styles.item_operation\n  }, __jsx(\"div\", {\n    className: hasLiked ? styles.item_operation_btn_active : styles.item_operation_btn,\n    onClick: async () => {\n      if (!AV.User.current()) {\n        message.error(\"请先登录\");\n        return;\n      }\n\n      await updateComment({\n        commentItem: props.item,\n        params: {\n          likes: hasLiked ? -1 : 1,\n          likesUser_id: props.userinfo.objectId\n        }\n      });\n      setlikes(likes + (hasLiked ? -1 : 1));\n      sethasLiked(!hasLiked);\n    }\n  }, __jsx(\"i\", {\n    className: `iconfont ${hasLiked ? \"icon-tubiaozhizuo-\" : \"icon-z-like\"}`\n  }), \" \", likes ? likes : \"\")));\n}\n\nexport default Components;","map":null,"metadata":{},"sourceType":"module"}