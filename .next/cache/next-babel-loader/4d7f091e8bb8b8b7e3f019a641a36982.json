{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport AV from 'leancloud-storage';\nimport dynamic from 'next/dynamic';\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport marked from 'marked';\nimport hljs from 'highlight.js';\nimport { BackTop, message } from 'antd';\nimport dayjs from 'dayjs';\nimport ReactScroll from 'react-scroll';\nimport styles from './index.module.scss';\nimport Layout from 'src/components/www/Layout';\nimport Comments from 'src/components/www/Comments';\nimport CategoryList from 'src/components/www/CategoryList';\nimport Ad from 'src/components/www/Ad';\nimport UserInfo from 'src/components/www/UserInfo';\nimport { getArticleById, updateArticle } from 'src/service/article';\nimport { createCollect, deleteCollect, countCollect, getMyCollect } from 'src/service/collect';\nimport { createLike, deleteLike, countLike, getMyLike } from 'src/service/likes';\nimport { countComments } from 'src/service/comment';\n\nrequire('dayjs/locale/zh-cn');\n\ndayjs.locale('zh-cn');\n\nconst relativeTime = require('dayjs/plugin/relativeTime');\n\ndayjs.extend(relativeTime);\nconst nav = [];\nconst renderer = new marked.Renderer();\n\nrenderer.heading = function heading(text, level, raw, slugger) {\n  nav.push({\n    text,\n    level,\n    raw,\n    slugger,\n    id: this.options.headerPrefix + slugger.slug(raw) + '-1'\n  });\n\n  if (this.options.headerIds) {\n    return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n  } // ignore IDs\n\n\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nmarked.setOptions({\n  renderer,\n  highlight: function (code, language) {\n    const hljs = require('highlight.js');\n\n    const validLanguage = hljs.getLanguage(language) ? language : 'plaintext';\n    return hljs.highlight(validLanguage, code).value;\n  },\n  pedantic: false,\n  gfm: true,\n  breaks: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  xhtml: false\n});\n\nfunction MyComponent() {\n  const router = useRouter();\n  const aid = router.query.id;\n  const {\n    0: articleObj,\n    1: setarticleObj\n  } = useState(null);\n  const {\n    0: articleObjJSON,\n    1: setarticleObjJSON\n  } = useState(null);\n  const {\n    0: author,\n    1: setauthor\n  } = useState(null);\n  const {\n    0: profile,\n    1: setprofile\n  } = useState(null);\n  const {\n    0: userinfo,\n    1: setuserinfo\n  } = useState(null);\n  const {\n    0: html,\n    1: sethtml\n  } = useState(null);\n  const {\n    0: views,\n    1: setviews\n  } = useState(0);\n  const {\n    0: num_collects,\n    1: setnum_collects\n  } = useState(0);\n  const {\n    0: myCollect,\n    1: setmyCollect\n  } = useState(null);\n  const {\n    0: num_comments,\n    1: setnum_comments\n  } = useState(0);\n  const {\n    0: num_likes,\n    1: setnum_likes\n  } = useState(0);\n  const {\n    0: myLike,\n    1: setmyLike\n  } = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      if (aid) {\n        const res = await getArticleById({\n          id: aid\n        });\n        setarticleObj(res);\n        setarticleObjJSON(res.toJSON());\n        setauthor(res.attributes.author);\n        sethtml(marked(res.attributes.articleVal)); // 访问数+1\n\n        await updateArticle({\n          articleItem: res,\n          params: {\n            views: 1\n          }\n        });\n        setviews(res.attributes.views); // 收藏数量\n\n        setnum_collects(await countCollect({\n          article: res\n        })); // 我是否收藏\n\n        const numCollect = await getMyCollect({\n          article: res\n        });\n        setmyCollect(numCollect); // 收藏数量\n\n        setnum_likes(await countLike({\n          article: res\n        })); // 我是否收藏\n\n        const numLike = await getMyLike({\n          article: res\n        });\n        setmyLike(numLike); // 评论数量\n\n        const numComments = await countComments({\n          article: res\n        });\n        setnum_comments(numComments);\n      }\n    }\n\n    fetchData();\n  }, [router]);\n\n  const handleCollect = async () => {\n    await handleAction({\n      actionName: '收藏',\n      actionName_en: 'collects',\n      myItem: myCollect,\n      createFunc: createCollect,\n      delectMyItemFunc: deleteCollect,\n      getMyItemFunc: getMyCollect,\n      countAllFuc: countCollect,\n      setMyItemFunc: setmyCollect,\n      setNumberFunc: setnum_collects,\n      article: articleObj\n    });\n  };\n\n  const handleLike = async () => {\n    await handleAction({\n      actionName: '点赞',\n      actionName_en: 'likes',\n      myItem: myLike,\n      createFunc: createLike,\n      delectMyItemFunc: deleteLike,\n      getMyItemFunc: getMyLike,\n      countAllFuc: countLike,\n      setMyItemFunc: setmyLike,\n      setNumberFunc: setnum_likes,\n      article: articleObj\n    });\n  };\n\n  const handleAction = async ({\n    actionName,\n    actionName_en,\n    myItem,\n    createFunc,\n    delectMyItemFunc,\n    getMyItemFunc,\n    countAllFuc,\n    setMyItemFunc,\n    setNumberFunc,\n    article\n  }) => {\n    if (!AV.User.current()) {\n      message.error('请先登录');\n      return;\n    }\n\n    if (myItem) {\n      await delectMyItemFunc({\n        item: myItem\n      });\n      setNumberFunc(await countAllFuc({\n        article\n      }));\n      setMyItemFunc(await getMyItemFunc({\n        article\n      }));\n      message.success(`取消${actionName}`); // 更新article 相关数量字段\n\n      updateArticle({\n        articleItem: article,\n        params: {\n          [`${actionName_en}`]: -1\n        }\n      });\n    } else {\n      await createFunc({\n        article\n      });\n      setNumberFunc(await countAllFuc({\n        article\n      }));\n      setMyItemFunc(await getMyItemFunc({\n        article\n      }));\n      message.success(`${actionName}成功`); // 更新article 相关数量字段\n\n      updateArticle({\n        articleItem: article,\n        params: {\n          [`${actionName_en}`]: 1\n        }\n      });\n    }\n  };\n\n  return __jsx(Layout, {\n    onChange: params => {\n      setprofile(params.profile);\n      setuserinfo(params.userinfo);\n    }\n  }, __jsx(BackTop, null), articleObj && articleObjJSON && __jsx(\"div\", {\n    className: styles.container\n  }, __jsx(\"div\", {\n    className: styles.left\n  }, __jsx(\"div\", {\n    className: styles.left_content\n  }, __jsx(UserInfo, {\n    userinfo: author,\n    time: dayjs(articleObj.createdAt).format('YYYY/MM/DD'),\n    views: views\n  }), __jsx(\"p\", {\n    className: styles.title\n  }, articleObjJSON.title), __jsx(\"article\", {\n    className: \"markdown-body\",\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  }), __jsx(\"div\", {\n    className: styles.actions\n  }, __jsx(\"div\", {\n    className: myLike ? styles.actions_item_active : styles.actions_item,\n    onClick: handleLike\n  }, __jsx(\"i\", {\n    className: \"iconfont icon-tubiaozhizuo-\"\n  }), num_likes ? __jsx(\"span\", {\n    className: styles.number\n  }, num_likes) : ''), __jsx(\"div\", {\n    className: myCollect ? styles.actions_item_active : styles.actions_item,\n    onClick: handleCollect\n  }, __jsx(\"i\", {\n    className: \"iconfont icon-star\"\n  }), num_collects ? __jsx(\"span\", {\n    className: styles.number\n  }, num_collects) : ''), __jsx(ReactScroll.Link, {\n    spy: true,\n    smooth: true,\n    to: \"article-comments\"\n  }, __jsx(\"div\", {\n    className: styles.actions_item\n  }, __jsx(\"i\", {\n    className: \"iconfont icon-message_three_points\"\n  }), num_comments ? __jsx(\"span\", {\n    className: styles.number\n  }, num_comments) : null)))), __jsx(\"div\", {\n    className: styles.left_content,\n    id: \"article-comments\"\n  }, __jsx(Comments, {\n    type: \"article\",\n    id: articleObj,\n    userinfo: userinfo\n  }))), __jsx(\"div\", {\n    className: styles.right\n  }, profile && profile.ads && __jsx(Ad, {\n    item: profile.ads[2]\n  }), __jsx(CategoryList, {\n    nav: nav\n  }))));\n}\n\nexport default MyComponent;","map":null,"metadata":{},"sourceType":"module"}