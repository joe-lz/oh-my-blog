{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport AV from 'leancloud-storage';\nimport dayjs from 'dayjs';\nimport { useRouter } from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport { Tree, Button, notification, Input, Modal, TreeSelect, Menu, Dropdown, Spin } from 'antd';\nimport styles from './index.module.scss';\nimport Upload from 'src/components/www/Upload';\nimport { createPost } from 'src/service/post';\nconst {\n  TextArea\n} = Input;\n\nfunction Components(props) {\n  const {\n    0: isSpin,\n    1: setisSpin\n  } = useState(false);\n  const {\n    0: modalShow,\n    1: setmodalShow\n  } = useState(false);\n  const {\n    0: desc,\n    1: setdesc\n  } = useState('');\n  const {\n    0: imgUrl,\n    1: setimgUrl\n  } = useState('');\n  const {\n    0: topic,\n    1: settopic\n  } = useState(null);\n  const {\n    0: disabled,\n    1: setdisabled\n  } = useState(true);\n\n  const handleSubmit = async () => {\n    if (desc) {\n      setisSpin(true);\n      await createPost({\n        desc,\n        imgUrl,\n        topic: topic ? AV.Object.createWithoutData('CMS_Topics', topic.objectId) : null,\n        userinfo: AV.Object.createWithoutData('CMS_UserInfo', props.userinfo.objectId)\n      });\n      props.onChange && props.onChange();\n      setisSpin(false);\n      setdesc('');\n      setimgUrl('');\n      settopic(null);\n      setdisabled(true);\n    }\n  };\n\n  const menu = __jsx(Menu, null, props.topiclist.map(obj => {\n    return __jsx(Menu.Item, {\n      key: obj.objectId\n    }, __jsx(\"div\", {\n      className: styles.topic_item,\n      onClick: () => {\n        settopic(obj);\n      }\n    }, __jsx(\"div\", {\n      className: styles.topic_item_img,\n      style: {\n        backgroundImage: `url(${obj.url})`\n      }\n    }), obj.title));\n  }));\n\n  useEffect(() => {}, []);\n  useEffect(() => {\n    if (desc) {\n      setdisabled(false);\n    } else {\n      setdisabled(true);\n    }\n  }, [desc]);\n  return __jsx(Spin, {\n    spinning: isSpin,\n    tip: \"\\u52A0\\u8F7D\\u4E2D...\"\n  }, __jsx(\"div\", {\n    className: styles.postEditor\n  }, __jsx(\"div\", {\n    className: styles.input\n  }, __jsx(TextArea, {\n    autoSize: true,\n    className: styles.textarea,\n    value: desc,\n    placeholder: \"\\u544A\\u8BC9\\u4F60\\u4E2A\\u5C0F\\u79D8\\u5BC6\\uFF0C\\u6DFB\\u52A0\\u5408\\u9002\\u8BDD\\u9898\\u4F1A\\u88AB\\u66F4\\u591A\\u4EBA\\u770B\\u89C1\\u54DF\\uFF5E\",\n    maxLength: 140,\n    onChange: e => {\n      setdesc(e.target.value);\n    }\n  }), __jsx(\"div\", {\n    className: styles.postEditor_media\n  }, imgUrl && __jsx(\"div\", {\n    className: styles.postEditor_media_img\n  }, __jsx(\"i\", {\n    className: \"iconfont icon-close\",\n    onClick: () => {\n      setimgUrl('');\n    }\n  }), __jsx(\"div\", {\n    className: styles.postEditor_media_img_content,\n    style: {\n      backgroundImage: `url(${imgUrl})`\n    },\n    onClick: () => {\n      setmodalShow(true);\n    }\n  })), topic && __jsx(\"div\", {\n    className: styles.postEditor_media_topic\n  }, topic.title))), __jsx(\"div\", {\n    className: styles.postEditor_operation\n  }, __jsx(\"div\", {\n    className: styles.postEditor_operation_btn,\n    onClick: () => {\n      setmodalShow(true);\n    }\n  }, __jsx(\"i\", {\n    className: \"iconfont icon-tupian1\",\n    style: {\n      marginRight: 5\n    }\n  }), \"\\u56FE\\u7247\"), __jsx(Dropdown, {\n    overlay: menu,\n    arrow: true,\n    placement: \"bottomCenter\"\n  }, __jsx(\"div\", {\n    className: styles.postEditor_operation_btn\n  }, __jsx(\"i\", {\n    className: \"iconfont icon-huatifuhao\"\n  }), \"\\u8BDD\\u9898\")), __jsx(Button, {\n    type: \"primary\",\n    className: styles.submit,\n    disabled: disabled,\n    onClick: () => {\n      handleSubmit();\n    }\n  }, \"\\u53D1\\u5E03\")), __jsx(Modal, {\n    width: 900,\n    visible: modalShow,\n    onCancel: () => {\n      setmodalShow(false);\n    },\n    onOk: () => {},\n    okText: \"\\u4FDD\\u5B58\",\n    cancelText: \"\\u53D6\\u6D88\",\n    bodyStyle: {\n      padding: 0\n    },\n    footer: null\n  }, modalShow && __jsx(Upload, {\n    onChoose: async ({\n      url\n    }) => {\n      setmodalShow(false);\n      setimgUrl(url);\n    }\n  }))));\n}\n\nexport default Components;","map":null,"metadata":{},"sourceType":"module"}